package pages

import (
	"fmt"
	"github.com/nats-io/nats-server/v2/server"
	"github.com/pocketbase/pocketbase/core"
	"github.com/nats-tower/nats-tower/application"
	"github.com/nats-tower/nats-tower/interfaces/web/utils"
	"github.com/nats-tower/nats-tower/interfaces/web/views/layouts"
	"time"
)

type StreamsModel struct {
	RequestEvent  *core.RequestEvent
	Installation  *application.OperatorAuth
	Account       *application.AccountAuth
	AccountDetail *server.AccountDetail
}

templ Streams(m StreamsModel) {
	<div class="page-wrapper">
		<div class="container-xl">
			<div class="page-header">
				<div class="row row-cards">
					<div class="col">
						<div class="row row-cards">
							<div class="col-auto">
								<a
									href={ templ.SafeURL(fmt.Sprintf("/ui/installations/%s/accounts/%s", m.Installation.ID, m.Account.ID)) }
									hx-get={ fmt.Sprintf("/ui/installations/%s/accounts/%s", m.Installation.ID, m.Account.ID) }
									hx-push-url="true"
									hx-target="#content"
								>
									<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="icon icon-tabler icons-tabler-outline icon-tabler-arrow-back-up"><path stroke="none" d="M0 0h24v24H0z" fill="none"></path><path d="M9 14l-4 -4l4 -4"></path><path d="M5 10h11a4 4 0 1 1 0 8h-1"></path></svg>
								</a>
							</div>
							<div class="col">
								<h2 class="page-title">
									Streams
								</h2>
								<div class="page-pretitle">
									Overview of streams in account '{ m.Account.Name }' on '{ m.Installation.Description }'
								</div>
							</div>
						</div>
						<div class="card mt-2">
							<div class="list-group list-group-flush" hx-ext="sse" sse-connect={ fmt.Sprintf("/ui/events?sources=stream_list&installation_id=%s&account_id=%s", m.Installation.ID, m.Account.ID) } sse-swap="stream_list">
								<button
									class="list-group-item"
								>
									<div class="row align-items-center">
										<div class="col text-truncate">
											@Loading()
										</div>
									</div>
								</button>
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>
	if !utils.RequestsFullPage(m.RequestEvent) {
		@layouts.Navigation(layouts.NavigationModel{
			CurrentLocation: "/ui/installations/" + m.Installation.ID + "/accounts/" + m.Account.ID + "/streams",
			InstallationID:  m.Installation.ID,
			AccountID:       m.Account.ID,
			Swap:            true,
		})
	}
}

type StreamListModel struct {
	Streams []server.StreamDetail
}

templ StreamList(m StreamListModel) {
	<div class="list-group list-group-flush">
		for _, stream := range m.Streams {
			<button
				class="list-group-item"
			>
				<div class="row align-items-center">
					<div class="col text-truncate">
						<div class="text-reset d-block">{ stream.Name }</div>
						<div class="d-block text-secondary text-truncate mt-n1">
							{ fmt.Sprintf("%d messages - %s - %d subjects - %d consumers - Last message at %s", stream.State.Msgs, utils.ToStringSigBytesPerKB(stream.State.Bytes, 3,1000),stream.State.NumSubjects, len(stream.Consumer), stream.State.LastTime.Format(time.RFC3339Nano)) }
						</div>
					</div>
				</div>
			</button>
		}
	</div>
}
